version: "3.7"

# Definição dos Serviços
services:
  evolution:
    image: atendai/evolution-api:v1.8.1
    command: ["node", "./dist/src/main.js"]
    networks:
      - minha_rede
    environment:
      - SERVER_URL=https://api.evolution.SEUDOMINIO.com.br # Endereço de acesso à API
      - SERVER_PORT=8090
      - DOCKER_ENV=true
      - LOG_LEVEL=ERROR,INFO #,WARN,DEBUG,LOG,VERBOSE,DARK,WEBHOOKS
      # Determina quanto tempo uma instância fica na memoria sem ser conectada
      # caso não queria remover instâncias sem conexão, deixe como false
      - DEL_INSTANCE=false
      # Configura o dispositivo
      - CONFIG_SESSION_PHONE_CLIENT=SuaEmpresa #Define um nome para aparecer na conexão
      - CONFIG_SESSION_PHONE_NAME=Chrome
      # *****************************************************************************************
      # Configura o armazenamento temporário de mensagens
      # *****************************************************************************************
      - STORE_MESSAGES=false # Armazena as mensagens temporariamente
      - STORE_MESSAGE_UP=false # Armazena mensagens enviadas temporariamente
      - STORE_CONTACTS=false # Armazenos os contatos temporariamente
      - STORE_CHATS=false # Armazena o ID das conversas que não estão arquivadas temporariamente
      # *****************************************************************************************
      # Limpeza dos arquivos temporários
      # *****************************************************************************************
      - CLEAN_STORE_CLEANING_INTERVAL=7200 # seconds === 2h / O sistema vai limpar tudo a cada x tempo
      - CLEAN_STORE_MESSAGES=true # Habilita a limpeza das mensagens
      - CLEAN_STORE_MESSAGE_UP=true # Habilita a limpeza das mensagens enviadas
      - CLEAN_STORE_CONTACTS=true # Habilita a limpeza dos contatos
      - CLEAN_STORE_CHATS=true # Habilita a limpeza do ID das conversas que não estão arquivadas
      # *****************************************************************************************
      # Autenticação da API
      # *****************************************************************************************
      - AUTHENTICATION_TYPE=apikey # Configura o Evolution para autenticar como API Key
      - AUTHENTICATION_API_KEY=GERAR-CHAVE-ACESSO-GLOBAL # GERAR EM https://www.avast.com/random-password-generator#pc    
      - AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES=true # Define se a apikey será exibida quando for listar instâncias
      - QRCODE_LIMIT=30 # Configura quantos qrcode serão gerados
      # *****************************************************************************************
      # Configurações do Webhook
      # *****************************************************************************************
      - WEBHOOK_GLOBAL_ENABLED=false # Habilita o Webhook Global
      - WEBHOOK_GLOBAL_URL=https://webhook.evolution.SEUDOMINIO.com.br # Define o endereço do Webhook Global
      - WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS=false # Habilita ou Desabilita os Webhooks
      - WEBHOOK_EVENTS_APPLICATION_STARTUP=false # Configura para receber o evento no inicio da aplicação
      - WEBHOOK_EVENTS_QRCODE_UPDATED=true # Configura para Receber um Webhook quando o QRCode for gerado
      - WEBHOOK_EVENTS_MESSAGES_SET=false # Configura para enviar um webhook com tdas as mensagens ao conectar ao whatsapp
      - WEBHOOK_EVENTS_MESSAGES_UPSERT=false # Configura para enviar um webhook com as mensagens novas
      - WEBHOOK_EVENTS_MESSAGES_UPDATE=false # Configura para enviar um webhook com as mensagens atualizadas
      - WEBHOOK_EVENTS_CONTACTS_SET=false # Configura para enviar um webhook com todos os contatos ao conectar ao whatsapp
      - WEBHOOK_EVENTS_CONTACTS_UPSERT=false # Configura para enviar um webhook com os contatos novos
      - WEBHOOK_EVENTS_CONTACTS_UPDATE=false # Configura para enviar um webhook com os contatos atualizados
      - WEBHOOK_EVENTS_PRESENCE_UPDATE=false # Configura para enviar um webhook quando um contato estiver online
      - WEBHOOK_EVENTS_CHATS_SET=false # Configura para enviar um webhook com todos os chats quando conectar ao whatsapp
      - WEBHOOK_EVENTS_CHATS_UPSERT=false # Configura para enviar um webhook com os chats novos
      - WEBHOOK_EVENTS_CHATS_UPDATE=false # Configura para enviar um webhook com os chats atualizados
      - WEBHOOK_EVENTS_CHATS_DELETE=false # Configura para enviar um webhook quando um chat for arquivado
      - WEBHOOK_EVENTS_GROUPS_UPSERT=false # Configura para enviar um webhook para quando um grupo for criado
      - WEBHOOK_EVENTS_GROUPS_UPDATE=false # Configura para enviar um webhook para quando um grupo for atualizado
      - WEBHOOK_EVENTS_GROUP_PARTICIPANTS_UPDATE=false # Configura para enviar um webhook para quando participante entrar/sair do grupo
      - WEBHOOK_EVENTS_CONNECTION_UPDATE=false # Configura para enviar um webhook para quando a conexão cair ou voltar
      # Configura o Redis
      # - REDIS_ENABLED=false
      # - REDIS_URI=redis://redis:6379/3
      # - REDIS_PREFIX_KEY=evolution
      # Configura o Rabbit
      # - RABBITMQ_ENABLED=false
      # - RABBITMQ_URI=amqp://usuario:senha@servidor:5672/vhost # Configura a conexão com o rabbitmq
      - DATABASE_ENABLED=true
      - DATABASE_CONNECTION_URI=mongodb://root:SENHA-DE-ACESSO-AO-MONGODB@mongodb:27017/?authSource=admin&readPreference=primary&ssl=false&directConnection=true
      - DATABASE_CONNECTION_DB_PREFIX_NAME=evolution
      - DATABASE_SAVE_DATA_INSTANCE=true
      - DATABASE_SAVE_DATA_NEW_MESSAGE=true
      - DATABASE_SAVE_MESSAGE_UPDATE=true
      - DATABASE_SAVE_DATA_CONTACTS=true
      - DATABASE_SAVE_DATA_CHATS=true
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "1"
          memory: 1024M
      labels:
        - traefik.enable=true # habilita o traefik
        - traefik.http.routers.evolution.rule=Host(`api.evolution.SEUDOMINIO.com.br`) # define o endereço de acesso ao serviço
        - traefik.http.routers.evolution.entrypoints=websecure # redireciona para SSL
        - traefik.http.routers.evolution.tls.certresolver=letsencryptresolver # configura o lets encrypt
        - traefik.http.routers.evolution.priority=1 # prioridade máxima para essa rota (padrão)
        - traefik.http.routers.evolution.service=evolution # define o nome do serviço
        - traefik.http.services.evolution.loadbalancer.server.port=8090 # define a porta que roda no container
        - traefik.http.services.evolution.loadbalancer.passHostHeader=true # passa todos os headers para o container

networks:
  minha_rede:
    name: minha_rede
    external: true
